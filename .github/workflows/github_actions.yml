name: Compilation minirt

on:
  push:
    branches:
      - caro
      - Antoine

jobs:
  parsing:
      runs-on: ubuntu-22.04
      steps:
          - uses : actions/checkout@v2
          - name : Compile parsing minirt
            run : |
              echo "In progress to create this test"

  mlx_check:
      runs-on: ubuntu-22.04
      steps:
          - uses : actions/checkout@v2
          - name : Install dependencies
            run : |
              sudo apt update
              sudo apt install -y libxext-dev libbsd-dev libssl-dev libx11-dev libxrandr-dev libxpm-dev
              sudo apt install xvfb x11-utils
              sudo apt install clang
              echo "Dependencies installed"
          - name : Compile mlx_check minirt
            run : |
              make action
          - name : Run mlx_check without args
            run : |
              ./minirt_action
          - name : Run mlx with scene_1.rt
            run : |
              export DISPLAY=:0
              xvfb-run ./minirt_action scene/scene_1.rt
          - name : Run mlx without DISPLAY
            run : |
              unset DISPLAY
              ./minirt_action scene/scene_1.rt

  norminette:
      runs-on: ubuntu-22.04
      steps:
          - uses : actions/checkout@v2
          - name : Install dependencies
            run : sudo apt install python3-pip && python3 -m pip install --upgrade pip setuptools && python3 -m pip install norminette && echo "Jobs completed"
          - name : Norminette
            run : |
              norminette srcs/ includes/ libft/
              if [ $? -eq 0 ]; then
                echo "Norminette passed"
              else
                echo "Norminette failed"
              fi

# # Ajoutez cette section pour spécifier quand exécuter la norminette
# on:
#   workflow_dispatch:
#     inputs:
#       run_norminette:
#         description: 'Run Norminette'
#         required: false
